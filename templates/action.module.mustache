module Actions
  {{method_documentation}}
  def {{method_name}}(arguments = {})
    {{#required_args}}
    raise ArgumentError, "Required argument '{{arg}}' missing" unless arguments[:{{arg}}]
    {{/required_args}}

    arguments = arguments.clone

    {{#path_args}}
    {{#listify}}
    _{{arg}} = Utils.__listify(arguments.delete(:{{arg}}))
    {{/listify}}
    {{^listify}}
    _{{arg}} = arguments.delete(:{{arg}})
    {{/listify}}
    {{/path_args}}

    path   = "{{path}}"
    headers = arguments.delete(:headers) || {}
    body = arguments.delete(:body)
    method = OpenSearch::API::HTTP_PUT
    params = Utils.__validate_and_extract_params arguments, ParamsRegistry.get(__method__)

    {{#listify_query_args}}
    params[:{{arg}}] = Utils.__listify(params[:{{arg}}]) if params[:{{arg}}]
    {{/listify_query_args}}

    perform_request(method, path, params, body, headers).body
  end

  # Register this action with its valid params when the module is loaded.
  #
  # @since 6.2.0
  ParamsRegistry.register(:create, [
    :wait_for_active_shards,
    :timeout,
    :master_timeout,
    :cluster_manager_timeout
  ].freeze)
end
