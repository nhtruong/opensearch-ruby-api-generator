module Actions
  {{method_documentation}}
  def {{method_name}}(arguments = {})
    {{#required_arguments}}
      raise ArgumentError, "Required argument '{{arg}}' missing" unless arguments[:{{arg}}]
    {{/required_arguments}}

    arguments = arguments.clone
    headers = arguments.delete(:headers) || {}

    _index = arguments.delete(:index)

    method = OpenSearch::API::HTTP_PUT
    path   = "#{Utils.__listify(_index)}"
    params = Utils.__validate_and_extract_params arguments, ParamsRegistry.get(__method__)

    body = arguments[:body]
    perform_request(method, path, params, body, headers).body
  end

  # Register this action with its valid params when the module is loaded.
  #
  # @since 6.2.0
  ParamsRegistry.register(:create, [
    :wait_for_active_shards,
    :timeout,
    :master_timeout,
    :cluster_manager_timeout
  ].freeze)
end
