module Actions
  {{method_description}}
  #
  {{#method_arguments}}
  # @option arguments [{{data_type}}] :{{name}} - {{#required}}* Required * {{/required}}{{#deprecated}}DEPRECATED {{/deprecated}}{{#default}}(default: {{default}} {{/default}}{{description}}
  {{/method_arguments}}
  def {{method_name}}(arguments = {})
    {{#required_args}}
    raise ArgumentError, "Required argument '{{arg}}' missing" unless arguments[:{{arg}}]
    {{/required_args}}

    arguments = arguments.clone

    {{#path_args}}
    {{#listify}}
    _{{arg}} = Utils.__listify(arguments.delete(:{{arg}}))
    {{/listify}}
    {{^listify}}
    _{{arg}} = arguments.delete(:{{arg}})
    {{/listify}}
    {{/path_args}}

    path    = Utils.__pathify {{{path_components}}}
    headers = arguments.delete(:headers) || {}
    body    = arguments.delete(:body)
    method  = {{{http_verb}}}
    params  = Utils.__validate_and_extract_params arguments, ParamsRegistry.get(__method__)

    {{#listify_query_args}}
    params[:{{arg}}] = Utils.__listify(params[:{{arg}}]) if params[:{{arg}}]
    {{/listify_query_args}}

    perform_request(method, path, params, body, headers).body
  end

  ParamsRegistry.register(:{{method_name}}, %i[
    {{#query_args}}
    {{arg}}
    {{/query_args}}
  ].freeze)
end
